// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QvaCar.Infraestructure.Chat;

namespace QvaCar.Infraestructure.Chat.Migrations.Chat
{
    [DbContext(typeof(QvaCarChatDbContext))]
    partial class QvaCarChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QvaCar.Domain.Chat.Channel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChatUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChatUserId");

                    b.ToTable("Channels", "Chat");
                });

            modelBuilder.Entity("QvaCar.Domain.Chat.ChatMessage", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ChannelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CorrelationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.ToTable("Messages", "Chat");
                });

            modelBuilder.Entity("QvaCar.Domain.Chat.ChatUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "Chat");
                });

            modelBuilder.Entity("QvaCar.Domain.Chat.Channel", b =>
                {
                    b.HasOne("QvaCar.Domain.Chat.ChatUser", null)
                        .WithMany("Channels")
                        .HasForeignKey("ChatUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("QvaCar.Domain.Chat.ChannelCarAd", "AboutAd", b1 =>
                        {
                            b1.Property<Guid>("ChannelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("MainImageFileName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ModelVersion")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ChannelId");

                            b1.ToTable("Channels");

                            b1.WithOwner()
                                .HasForeignKey("ChannelId");
                        });

                    b.OwnsOne("QvaCar.Domain.Chat.ChannelLastMessagePreview", "LastMessage", b1 =>
                        {
                            b1.Property<Guid>("ChannelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAtUtc")
                                .HasColumnType("datetime2");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ChannelId");

                            b1.ToTable("Channels");

                            b1.WithOwner()
                                .HasForeignKey("ChannelId");

                            b1.OwnsOne("QvaCar.Domain.Chat.MessageType", "MessageType", b2 =>
                                {
                                    b2.Property<Guid>("ChannelLastMessagePreviewChannelId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ChannelLastMessagePreviewChannelId");

                                    b2.ToTable("Channels");

                                    b2.WithOwner()
                                        .HasForeignKey("ChannelLastMessagePreviewChannelId");
                                });

                            b1.Navigation("MessageType")
                                .IsRequired();
                        });

                    b.OwnsOne("QvaCar.Domain.Chat.ChannelUser", "AnotherParticipant", b1 =>
                        {
                            b1.Property<Guid>("ChannelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ChannelId");

                            b1.ToTable("Channels");

                            b1.WithOwner()
                                .HasForeignKey("ChannelId");
                        });

                    b.OwnsOne("QvaCar.Domain.Chat.ChannelUserRole", "MyRole", b1 =>
                        {
                            b1.Property<Guid>("ChannelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ChannelId");

                            b1.ToTable("Channels");

                            b1.WithOwner()
                                .HasForeignKey("ChannelId");
                        });

                    b.Navigation("AboutAd")
                        .IsRequired();

                    b.Navigation("AnotherParticipant")
                        .IsRequired();

                    b.Navigation("LastMessage");

                    b.Navigation("MyRole")
                        .IsRequired();
                });

            modelBuilder.Entity("QvaCar.Domain.Chat.ChatMessage", b =>
                {
                    b.HasOne("QvaCar.Domain.Chat.Channel", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("QvaCar.Domain.Chat.MessageType", "MessageType", b1 =>
                        {
                            b1.Property<long>("ChatMessageId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ChatMessageId");

                            b1.ToTable("Messages");

                            b1.WithOwner()
                                .HasForeignKey("ChatMessageId");
                        });

                    b.Navigation("MessageType")
                        .IsRequired();
                });

            modelBuilder.Entity("QvaCar.Domain.Chat.Channel", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("QvaCar.Domain.Chat.ChatUser", b =>
                {
                    b.Navigation("Channels");
                });
#pragma warning restore 612, 618
        }
    }
}
